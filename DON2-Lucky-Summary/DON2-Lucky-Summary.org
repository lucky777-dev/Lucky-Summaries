#+latex_class: luckypdf
#+language: fr
#+title: DON2 - Lucky Summary
#+author: Sm!le42

* Dépendance fonctionnelle /X-->Y/
** Théorie
Soit /X/ et /Y/ des ensembles d'attributs dans une relation /R/. Il existe une dépendance fonctionnelle /X-->Y/ si, à tout instant, deux lignes de /R/ qui ont les mêmes valeurs pour /X/ ont aussi les mêmes valeurs pour /Y/.
#+begin_quote
*Remarque:*

On omettra les accolades liées à la notation ensembliste pour un unique attribut.

Ainsi, /{PRODUIT} --> {PRIX}/ deviendra /PRODUIT --> PRIX/.
#+end_quote
\color{luckydarkgray}
Exemple:

/PRODUIT --> PRIX/
- /PRODUIT/ détermine (fonctionnellement) /PRIX/
- /PRIX/ dépend (fonctionnellement) de /PRODUIT/
- /PRODUIT/ est le déterminant et /PRIX/ est le déterminé de la dépendance fonctionnelle
\color{black}
** Exercices
*** Trouver les dépendances fonctionnelles
**** Un cours n'est donné que par un seul enseignant: \color{luckydarkgreen}COURS --> ENSEIGNANT\color{black}
**** Un enseignant ne peut pas donner deux cours en même temps: \color{luckydarkgreen}ENSEIGNANT, HEURE --> COURS\color{black}
**** Un cours porte sur une seule matière: \color{luckydarkgreen}COURS --> MATIÈRE\color{black}
**** Un numéro de plaque d'immatriculation est lié au propriétaire de la voiture: \color{luckydarkgreen}PLAQUE --> PROPRIO\color{black}
**** Un modèle LEGO est réalisé avec un certain nombre de pièces: \color{luckydarkgreen}MODÈLE --> NOMBRE DE PIÈCES\color{black}
**** Suivant la moyenne obtenue par un étudiant pour son année, celui-ci recevra un grade. (12 = satisfaisant, 14 = distinction...): \color{luckydarkgreen}MOYENNE --> GRADE\color{black}
**** Un 0code /bic/ est associé à chacune des banques: \color{luckydarkgreen}BIC --> BANQUE et BANQUE --> BIC\color{black}
*** Donner les implications des DF
**** /ENSEIGNANT --> COURS/
***** Un enseignant donne qu'un seul cours: \color{luckydarkgreen}Vrai\color{black}
***** Un enseignant donne toujours le même cours: \color{luckydarkred}Faux\color{black}
***** Le cours est donné par un seul enseignant: \color{luckydarkred}Faux\color{black}
**** /CODEPOSTAL --> VILLE/
***** Une ville est associée à un et un seul code postal: \color{luckydarkred}Faux\color{black}
***** Un code postal est associé à une et une seule ville: \color{luckydarkgreen}Vrai\color{black}
***** Autre: \color{luckydarkgray}Rien\color{black}
***** La dépendance fonctionnelle /CODEPOSTAL --> VILLE/ représente-t-elle la situation des codes postaux en Belgique?: \color{luckydarkred}Non\color{black}
**** /VERSIONUNICODE --> TAILLECHARSET/
***** Le nombre de caractères Unicode est différent d'une version à l'autre: \color{luckydarkgreen}Pas forcément\color{black}
***** Je connais le nombre de caractères admis dans mon système, je connais donc la version Unicode prise en charge par celui-ci: \color{luckydarkred}Faux\color{black}
***** Autre: \color{luckydarkgreen}Si je connais la version Unicode, je connais le nombre de caractères admis\color{black}
**** /{PUISSANCE, ÂGE} --> TAXECIRCULATION/
***** Si je connais le montant de la taxe de circulation, je connais la puissance et l'âge d'une voiture: \color{luckydarkred}Faux\color{black}
***** Si je connais l'âge d'une voiture, je connais le montant de la taxe: \color{luckydarkred}Faux\color{black}
***** Si je connais la puissance et l'âge d'une voiture, je connais le montant de la taxe: \color{luckydarkgreen}Vrai\color{black}
***** Autre: \color{luckydarkgray}Rien\color{black}
* Schéma conceptuel
** Théorie
*** Identifiant (key)
Un identifiant est un ensemble d'un ou plusieurs attributs tel que toutes valeurs de ceux-ci nous permette de retrouver, à tout moment, au plus un tuple.

Une table peut posséder plusieurs identifiants. On choisit l'un d'eux, le plus souvent minimal, qu'on déclare *primaire*. Les autres sont dès lors, *secondaires*.

L'identifiant primaire est constitué de *colonnes obligatoires*.
**** *Identifiant minimal*

Un identifiant est minimal si chacune de ses colonnes est nécessaire pour garantir la contrainte d'unicité.

**** *Identifiant simple*

Identifiant composé d'un seul attribut.

**** *Identifiant composé*

Identifié composé de plusieurs attributs.
*** Clé étrangère
Une clé étrangère définit une contrainte référentielle. Elle référence en principe l'identifiant primaire de la table cible. (Elle peut référencer un identifiant secondaire mais ce n'est pas recommandé).

Il se peut qu'une clé étrangère soit également un identifiant.
*** /<null>/
L'absence de valeur est généralement indiquée par /<null>/ ou par rien.

*Remarque:* WHERE cat *IS* null; \color{luckydarkgray}(Et pas WHERE cat = null)\color{black}
** Exercices
#+caption: Schéma Table
#+attr_latex: :width 300px
file:SchemaTable.png
*** En fonction de l'image, remplir le tableau suivant en y ajoutant les noms des attributs adéquats. (Certaines cellules peuvent rester vides)

\color{luckydarkgray}(=Voir Figure 1=)\color{black}
#+attr_latex: :align c|c|c|c|c|c
| Table    | id primaire | un id minimal | un id simple | un id composé | les clés étrangères |
|----------+-------------+---------------+--------------+---------------+---------------------|
| CLIENT   | NCLI        | NCLI          | NCLI         | NCLI, NOM     | /<null>/            |
| COMMANDE | NCOM        | NCOM          | NCOM         | NCOM, NCLI    | NCLI                |
| DETAIL   | NCOM, NPRO  | NCOM, NPRO    | /<null>/     | NCOM, NPRO    | NCOM et NPRO        |
| PRODUIT  | NPRO        | NPRO          | NPRO         | NPRO, PRIX    | /<null>/            |

*** Répondre aux questions
**** {NCLI, NOM} constitue-t-il un identifiant?

\color{luckydarkgreen}Oui, NCLI étant l'identifiant primaire de CLIENT.\color{black}
**** DETAIL.NCOM est-il un identifiant de DETAIL?

\color{luckydarkred}Non, car l'identifiant minimal de DETAIL est un identifiant composé {NCOM, NPRO}.\color{black}
**** Comment retrouver de façon sûre un client? Et un produit?

\color{luckydarkgreen}Avec l'identifiant NCLI pour CLIENT, et NPRO pour PRODUIT.\color{black}
**** Peut-il y avoir deux clients avec le même nom?

\color{luckydarkgreen}Oui, mais ils auront un identifiant NCLI différent.\color{black}
**** Un client a-t-il toujours au moins une commande?

\color{luckydarkred}Non, dans la table CLIENT rien ne fait référence à une COMMANDE.\color{black}
**** Une commande doit-elle toujours avoir au moins une ligne de détail?

\color{luckydarkred}Non, dans la table COMMANDE rien ne fait référence à un DETAIL.\color{black}
**** Une commande peut-elle exister sans connaître le client qui l'a demandée?

\color{luckydarkred}Non, dans la table COMMANDE l'attribut NCLI n'est pas facultatif, et il référence vers CLIENT.NCLI.\color{black}
**** Un produit doit-il toujours avoir une quantité en stock connue?

\color{luckydarkgreen}Oui car QSTOCK n'est pas facultatif, mais il peut éventuellement être à 0.\color{black}
**** Peut-il y avoir plusieurs fois le même produit dans une commande?

\color{luckydarkred}Non, l'identifiant primaire de DETAIL l'interdit.\color{black}
**** Comment retrouver de façon sûre une ligne DETAIL?

\color{luckydarkgreen}Avec l'identifiant {NCOM, NPRO}\color{black}
**** La catégorie du client doit-elle toujours avoir une valeur connue?

\color{luckydarkred}Non car CLIENT.CAT est facultatif ([0-1]).\color{black}
**** Comment retrouver les clients qui ont commandé au moins une fois?

\color{luckydarkgreen}Avec l'identifiant COMMANDE.NCLI.\color{black}
**** Comment retrouver les produits qui n'ont jamais été commandés?

\color{luckydarkgreen}En retirant les DETAIL.NPRO des PRODUIT.NPRO.\color{black}
* Projection et sélection
** Théorie
*** SELECT /\pi_{{attributs de la projection}}/ (Relation)
Toute requête *SELECT* renvoie un résultat sous la forme d'une table.

*Notation:* /\pi_{{attributs de la projection}}/ (Relation) \color{luckydarkgray}(SELECT attributs FROM Relation)\color{black}

\color{luckydarkgray}
Exemple:

NUMERONOMCLIENT = /\pi_{{NCLI, NOM}}/ (CLIENT)

signifie:

SELECT NCLI, NOM FROM CLIENT;
\color{black}
*** DISTINCT
La commande DISTINCT permet de récupérer les informations en ignorant les doublons.

\color{luckydarkgray}Exemple: SELECT DISTINCT LOCALITE FROM CLIENT;\color{black}
*** WHERE /\sigma_{{condition de la sélection}}/
La commande WHERE permet d'ajouer une condition à la requête.

*Notation:* /\sigma_{{condition de la sélection}}/ (Relation) \color{luckydarkgray}(SELECT * FROM RELATION WHERE condition)\color{black}

\color{luckydarkgray}
Exemple:

CLIENTCATB2 = /\sigma_{{CAT="B2"}}/ (CLIENT)

signifie:

SELECT * FROM CLIENT WHERE CAT="B2";
\color{black}
*** IN
SELECT NCLI FROM CLIENT WHERE CAT IN ("C1", "C2", "C3");

\color{luckydarkgray}
CAT = "C1" ou "C2" ou "C3"
\color{black}
*** BETWEEN
SELECT NCLI FROM CLIENT WHERE COMPTE BETWEEN 1000 AND 4000;

\color{luckydarkgray}
COMPTE >= 1000 et <= 4000
\color{black}
*** LIKE (_ et %)
SELECT NCLI FROM CLIENT WHERE CAT LIKE "B_";

\color{luckydarkgray}
Le '_' remplace un caractère quelconque. (Par exemple "B2" ou "B4" ou "BX")

C'est l'équivalent du '?' dans Linux. (=B?=)
\color{black}

SELECT NPRO FROM PRODUIT WHERE LIBELLE LIKE "%SAPIN%";

\color{luckydarkgray}
Le % remplace 0 ou plusieurs caractères quelconques. (Par exemple "1SAPIN2" ou "SAPINXYZ" ou "SAPIN")

C'est l'équivalent du '*' dans Linux. (=*SAPIN*=)
\color{black}
*** AS
SELECT NPRO AS Produits, 0.21*prix*qstock AS ValeurTVA FROM PRODUIT WHERE QSTOCK > 500;

\color{luckydarkgray}
On donne un alias aux colonnes. (Leur nom sera Produits et ValeurTVA)
\color{black}
** Exercices
#+caption: Projection Selection 1
#+attr_latex: :width 300px
file:PROJECTIONSELECTION1.png
*** Répondre aux questions
\color{luckydarkgray}(=Voir Figure 2=)\color{black}
**** Fournissez une expression relationnelle donnant les identifications de sections organisées dans lesquelles au moins un étudiant est inscrit

\color{luckydarkgreen} /\pi_{{etuSec}}/ (Etudiant)\color{black}
**** Fournissez une expression relationnelle donnant les identifications de sections organisées dans lesquelles au moins un étudiant de troisième bloc est inscrit

\color{luckydarkgreen} /\pi_{{etuSec}}/ (/\sigma_{{etuAn=3}}/ (Etudiant))\color{black}
*** Donner la sémantique
\color{luckydarkgray}(=Voir Figure 2=)\color{black}
**** /\sigma_{{(etuAn=2 OU etuAn=3) ET etuSec='R'}}/ (Etudiant)

\color{luckydarkgreen}Donne toutes les infos des étudiants de 2ème ou 3ème de la section R.\color{black}
**** /\pi_{{etuSec}}/ (/\sigma_{{etuNom="Durant" ET etuAn=1}}/ (Etudiant))

\color{luckydarkgreen}Donne la section des étudiants qui s'appellent Durant et qui sont en 1ère.\color{black}
**** /\pi_{{etuSec, etuTel}}/ (/\sigma_{{etuNom!="Durant" OU etuAn!=1}}/ (Etudiant))

\color{luckydarkgreen}Donne la section et le numéro de téléphone des étudiant ne s'appelant pas Durant ou n'étant pas en 1ère.\color{black}
**** SELECT *

\quad FROM CLIENT;

\color{luckydarkgreen}Donne toutes les informations de la table CLIENT.\color{black}
**** SELECT DISTINCT NCLI

\quad FROM COMMANDE

\quad WHERE NCOM BETWEEN 30178 AND 30188;

\color{luckydarkgreen}Donne la liste sans doublon des numéros de clients ayant passé les commandes dont le numéro est compris entre 30179 et 30188 inclus.\color{black}
**** SELECT QSTOCK*PRIX

\quad FROM PRODUIT

\quad WHERE LIBELLE LIKE "CHE%";

\color{luckydarkgreen}Donne la valeur du stock des produits dont le libellé commence par "CHE".\color{black}
**** SELECT NOM, NCLI
\quad FROM CLIENT

\quad WHERE CAT NOT IN ("B1", "C1") AND CAT IS NOT null;

\color{luckydarkgreen}Donne le nom et le numéro des clients qui ont une catégorie non nulle et autre que B1 et C1.\color{black}
**** SELECT DISTINCT NPRO

\quad FROM PRODUIT

\quad WHERE LIBELLE LIKE "%SAPIN%" AND PRIX BETWEEN 100 AND 150;

\color{luckydarkgreen}Donne les différents numéros de produit ayant SAPIN dans leur libellé et un prix entre 100 et 150 inclus.\color{black}
* Jointure (A) $\bowtie_{<condition>}$ (B)
** Théorie
La jointure permet de produire une table constituée de données extraites de plusieurs tables. C'est donc l'ensemble des lignes du produit cartésien qui vérifient la condition.

*Notation:* (A) $\bowtie_{<condition>}$ (B) \color{luckydarkgray}(SELECT * FROM A JOIN B ON condition)\color{black}
*** Produit cartésien A \times B
Chaque ligne d'une table (A) est couplée avec chaque ligne d'une autre table (B).
** Exercices
#+caption: Tables Exercices Jointures
#+attr_latex: :width 300px
file:TablesJointuresExercices.png
*** Donner la liste des tuples de A
\color{luckydarkgray}(=Voir Figure 3=)\color{black}
**** La valeur de a2 apparaît dans b2

\color{luckydarkgreen}
(A) $\bowtie_{a2=b2}$ (B)
#+attr_latex: :align c|c|c|c|c|c
| a1 | a2   | a3 | b1 | b2   | b3 |
|----+------+----+----+------+----|
| 20 | bbbb | 15 | 15 | bbbb | 40 |
| 40 | dddd | 33 | 49 | dddd | 75 |
\color{black}
**** La valeur de a2 n'apparaît pas dans b2

\color{luckydarkgreen}
(A) $\bowtie_{a2!=b2}$ (B)
#+attr_latex: :align c|c|c|c|c|c
|                        a1 | a2                          |                        a3 |                        b1 | b2                          |                        b3 |
|---------------------------+-----------------------------+---------------------------+---------------------------+-----------------------------+---------------------------|
|                        10 | aaaa                        |                        15 |                        33 | xxxx                        |                        10 |
|                        10 | aaaa                        |                        15 |                        15 | bbbb                        |                        40 |
|                        10 | aaaa                        |                        15 |                        41 | tttt                        |                        40 |
|                        10 | aaaa                        |                        15 |                        49 | dddd                        |                        75 |
|                        20 | bbbb                        |                        15 |                        33 | xxxx                        |                        10 |
| \color{luckydarkred} +20+ | \color{luckydarkred} +bbbb+ | \color{luckydarkred} +15+ | \color{luckydarkred} +15+ | \color{luckydarkred} +bbbb+ | \color{luckydarkred} +40+ |
|                        20 | bbbb                        |                        15 |                        41 | tttt                        |                        40 |
|                        20 | bbbb                        |                        15 |                        49 | dddd                        |                        75 |
|                        30 | cccc                        |                        22 |                        33 | xxxx                        |                        10 |
|                        30 | cccc                        |                        22 |                        15 | bbbb                        |                        40 |
|                        30 | cccc                        |                        22 |                        41 | tttt                        |                        40 |
|                        30 | cccc                        |                        22 |                        49 | dddd                        |                        75 |
|                        40 | dddd                        |                        33 |                        33 | xxxx                        |                        10 |
|                        40 | dddd                        |                        33 |                        15 | bbbb                        |                        40 |
|                        40 | dddd                        |                        33 |                        41 | tttt                        |                        40 |
| \color{luckydarkred} +40+ | \color{luckydarkred} +dddd+ | \color{luckydarkred} +33+ | \color{luckydarkred} +49+ | \color{luckydarkred} +dddd+ | \color{luckydarkred} +75+ |
\color{black}
*** Calculer
\color{luckydarkgray}(=Voir Figure 3=)\color{black}
**** (A) $\bowtie_{a1=b3}$ (/\sigma_{{b3=75}}/ (B))

\color{luckydarkgreen} = $\varnothing$ \color{black}
**** /\pi_{{a1, b1, b2, b3}}/ (/\sigma_{{b1=15}}/ ((A) $\bowtie_{a1=b3}$ (B)))

***** \color{luckydarkgreen}D'abord (A) $\bowtie_a1=b3$ (B)
#+attr_latex: :align c|c|c|c|c|c
| a1 | a2   | a3 | b1 | b2   | b3 |
|----+------+----+----+------+----|
| 10 | aaaa | 15 | 33 | xxxx | 10 |
| 40 | dddd | 33 | 15 | bbbb | 40 |
| 40 | dddd | 33 | 41 | tttt | 40 |
\color{black}
***** \color{luckydarkgreen}Ensuite /\sigma_{{b1=15}} ((A) $\bowtie_a1=b3$ (B))/
#+attr_latex: :align c|c|c|c|c|c
| a1 | a2   | a3 | b1 | b2   | b3 |
|----+------+----+----+------+----|
| 40 | dddd | 33 | 15 | bbbb | 40 |
\color{black}
***** \color{luckydarkgreen}Enfin /\pi_{{a1, b1, b2, b3}}/ (/\sigma_{{b1=15}}/ ((A) $\bowtie_{a1=b3}$ (B)))
#+attr_latex: :align c|c|c|c
| a1 | b1 | b2   | b3 |
|----+----+------+----|
| 40 | 15 | bbbb | 40 |
\color{black}
**** /\pi_{{a1, a2, b1, b2}}/ ((A) $\bowtie_{a2=b2}$ (B))

***** \color{luckydarkgreen}D'abord (A) $\bowtie_a2=b2$ (B)
#+attr_latex: :align c|c|c|c|c|c
| a1 | a2   | a3 | b1 | b2   | b3 |
|----+------+----+----+------+----|
| 20 | bbbb | 15 | 15 | bbbb | 40 |
| 40 | dddd | 33 | 49 | dddd | 75 |
\color{black}
***** \color{luckydarkgreen}Enfin /\pi_{{a1, a2, b1, b2}}/ ((A) $\bowtie_{a2=b2}$ (B))
#+attr_latex: :align c|c|c|c
| a1 | a2   | b1 | b2   |
|----+------+----+------|
| 20 | bbbb | 15 | bbbb |
| 40 | dddd | 49 | dddd |
\color{black}
**** (A) $\bowtie_{A.a1=C.b3}$ ((A) $\bowtie_{a3=b1}$ (B))C
***** \color{luckydarkgreen}D'abord (A) $\bowtie_{a3=b1}$ (B) ce qui nous donne C
#+attr_latex: :align c|c|c|c|c|c
| a1 | a2   | a3 | b1 | b2   | b3 |
|----+------+----+----+------+----|
| 10 | aaaa | 15 | 15 | bbbb | 40 |
| 20 | bbbb | 15 | 15 | bbbb | 40 |
| 40 | dddd | 33 | 33 | xxxx | 10 |
\color{black}
***** \color{luckydarkgreen}Enfin (A) $\bowtie_{A.a1=C.b3}$ ((A) $\bowtie_{a3=b1}$ (B))C
#+attr_latex: :align c|c|c|c|c|c|c|c|c
| a1 | a2   | a3 | a1 | a2   | a3 | b1 | b2   | b3 |
|----+------+----+----+------+----+----+------+----|
| 40 | dddd | 33 | 10 | aaaa | 15 | 15 | bbbb | 40 |
| 40 | dddd | 33 | 20 | bbbb | 15 | 15 | bbbb | 40 |
| 10 | aaaa | 15 | 40 | dddd | 33 | 33 | xxxx | 10 |
\color{black}
*** Donner la sémantique
\color{luckydarkgray}(=Voir Figure 4=)\color{black}
#+caption: Jointure Tables Exercices
#+attr_latex: :width 300px
file:SchemaTable.png
**** SELECT DETAIL.NCOM, DETAIL.NPRO, QCOM, QSTOCK

\quad FROM DETAIL

\quad \quad JOIN PRODUIT ON DETAIL.NPRO = PRODUIT.NPRO

\quad WHERE QCOM > QSTOCK;

\color{luckydarkred}Réponse non vérifiée pas un enseignant... Attention aux erreurs!\color{black}

\color{luckydarkgreen}Retourne le numéro de commande, le numéro de produit, la quantité de commandes et la quantité en stock des produits où la quantité de commande dépasse la quantité en stock.\color{black}
**** SELECT DISTINCT P.NPRO, LIBELLE, PRIX

\quad FROM PRODUIT P

\quad \quad JOIN DETAIL D ON P.NPRO = D.NPRO

\quad \quad JOIN COMMANDE COM ON COM.NCOM = D.NCOM

\quad \quad JOIN CLIENT C ON C.NCLI = COM.NCLI

\quad WHERE LOCALITE IN ("Bruxelles", "Liège", "Namur");

\color{luckydarkred}Réponse non vérifiée pas un enseignant... Attention aux erreurs!\color{black}

\color{luckydarkgreen}Retourne le numéro de produit, le libellé et le prix des produits qui ont déjà été commandés par des client dont la localité est "Bruxelles", "Liège", ou "Namur" (sans doublon).\color{black}
**** SELECT DISTINCT CLIENT.NCLI

\quad FROM COMMANDE

\quad \quad JOIN CLIENT ON CLIENT.NCLI = COMMANDE.NCLI

\quad WHERE COMPTE < 0;

\color{luckydarkred}Réponse non vérifiée pas un enseignant... Attention aux erreurs!\color{black}

\color{luckydarkgreen}Retourne le numéro de client des clients qui ont effectué une commande et dont le compte est négatif (sans doublon).\color{black}
**** Si la table CLIENT comporte 16 lignes et la table COMMANDE 7, combien de lignes seront retournées par la requête suivante:
\color{luckydarkgray}(=Voir Figure 5=)\color{black}

SELECT *

\quad FROM COMMANDE

\quad \quad JOIN CLIENT ON CLIENT.NCLI!=COMMANDE.NCLI;

#+caption: Tables Ex2
#+attr_latex: :width 300px
file:TablesEx2.png

\color{luckydarkred}Réponse non vérifiée pas un enseignant... Attention aux erreurs!\color{black}

\color{luckydarkgreen}105 lignes seront retournées car 16*7 -- 7. Cette requête retourne toutes les infos des clients qui n'ont jamais passé de commandes.\color{black}
**** SELECT SUP.DptNo, SUP.dptLib, DPT.dptLib

\quad FROM DEPARTEMENT SUP

\quad \quad JOIN DEPARTEMENT DPT ON DPT.dptAdm=SUP.dptNo;

\color{luckydarkgray}(=Voir Figure 6=)\color{black}

#+caption: Tables Ex3
#+attr_latex: :width 200px
file:TablesEx3.png

\color{luckydarkred}Réponse non vérifiée pas un enseignant... Attention aux erreurs!\color{black}

\color{luckydarkgreen}Retourne le numéro de département et le libellé de département du produit cartésien de la table DÉPARTEMENT par elle-même ainsi que le libellé de département de la table DÉPARTEMENT où l'Adm du département de la table est égal au numéro de département du produit cartésien de la table DÉPARTEMENT par elle-même.\color{black}
**** La requête suivante retournera combien de ligne?

\color{luckydarkgray}(=Voir Figure 6=)\color{black}

SELECT SUP.dptNo, SUP.dptLib, DPT.dptLib

\quad FROM DEPARTEMENT SUP

\quad \quad JOIN DEPARTEMENT DPT ON DPT.dptAdm != SUP.dptNo;

\color{luckydarkred}Réponse non vérifiée pas un enseignant... Attention aux erreurs!\color{black}

\color{luckydarkgreen}8 lignes seront retournées car 64 -- 56. Cette requête retourne le numéro de département et le libellé de département du produit cartésien de la table DÉPARTEMENT par elle-même ainsi que le libellé de département de la table DÉPARTEMENT où l'Adm du département de la table est différent du numéro de département du produit cartésien de la table DÉPARTEMENT par elle-même.\color{black}
* Agrégats
** Fonctions agrégatives (COUNT, SUM, MIN, MAX, AVG)
\color{luckydarkred}Attention! \color{black}Les valeurs nulles ne sont *pas* reprises par les fonctions agrégatives.
*** COUNT
Compte le nombre de lignes.
*** SUM
Additionne toutes les valeurs.
*** MIN
Retourne le plus petit.
*** MAX
Retourne le plus grand.
*** AVG (average)
Retourne la moyenne des valeurs.
** GROUP BY /\gamma_{{liste d'attributs pour le groupement;liste d'expressions affichées}}/ (Relation)
Le groupement permet de regrouper des lignes en une ligne, en fonction d'un ou plusieurs attributs.

On ne peut *SELECT* que des attributs repris dans le *GROUP BY*.

Soit R:
#+attr_latex: :align c|c|c|c
|  x | y |  z | t |
|----+---+----+---|
|  1 | a | 12 | x |
|  2 | a | 12 | x |
|  3 | a |  3 | x |
|  4 | a |  3 | y |
|  5 | a | 12 | z |
|  6 | a |  6 | z |
|  7 | b |  1 | x |
|  8 | b | 12 | y |
|  9 | c |  4 | x |
| 10 | d |  5 | t |
| 11 | d |  5 | u |
| 12 | x | 12 | t |
| 13 | y |  4 | t |

Alors /\gamma_{{y;y, max(z)}}/ (R) donnera:

#+attr_latex: :align c|c
| y | max(z) |
|---+--------|
| a |     12 |
| b |     12 |
| c |      4 |
| d |      5 |
| x |     12 |
| y |      4 |
** Exercices
*** Donnez une expression relationnelle
#+caption: Agrégats Exercices - Tables 1
#+attr_latex: :width 300px
file:AgregatsEx1.png
**** Fournir par id et libelle de section, le nombre d'étudiants régulièrement inscrits

\color{luckydarkgreen}
/\pi_{{EtuSec, EtuLibelle}}/ ((Section) $\bowtie_{SecId=EtuSec}$ (/\gamma_{{EtuSec;EtuSec, count(*)}}/ (Etudiant)))
\color{black}
